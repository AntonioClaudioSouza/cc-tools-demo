apiVersion: v1
kind: Service
metadata:  
  labels:
    app: ccapi-org1-example-com
  name: ccapi-org1-example-com
  namespace: hlpesproject-net
spec:
  ports:
  - nodePort: 32080
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: ccapi-org1-example-com
  sessionAffinity: ClientIP
  type: LoadBalancer
 # externalIPs:    #only k8s, if not get automatic external-ip
 # - 0.0.0.0  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  ccapi-org1-example-com
  namespace: hlpesproject-net  
  labels:
    app:  ccapi-org1-example-com
spec:
  selector:
    matchLabels:
      app: ccapi-org1-example-com
  replicas: 1  
  template:
    metadata:
      labels:
        app:  ccapi-org1-example-com
    spec:
      containers:
      - name:  ccapi-org1-example-com
        image:  node:carbon
        workingDir: /rest-server
        command: ["/bin/sh","-c"]        
        args: ["[ ! -d 'node_modules' ] && npm install; npm start; sleep infinity"]               
        env:
        - name: CONFIG_SDK_FILE
          value: configsdk-org1.yaml
        - name: DOCKER
          value: "1"
        - name: CHANNEL
          value: mainchannel
        - name: CCNAME
          value: hlpesproject
        ports:
        - containerPort:  80              
        volumeMounts:
        - name: volume-rest-server
          mountPath: /rest-server
        - name: volume-certs-org
          mountPath: /certs
      volumes:
        - name: volume-rest-server
          hostPath:
            path: /home/centos/antonio/cc-tools-demo/antonio/rest-server
            type: DirectoryOrCreate
        - name: volume-certs-org
          hostPath:
            path: /home/centos/antonio/cc-tools-demo/fabric/crypto-config/rest-certs/org1.example.com
            type: DirectoryOrCreate
      restartPolicy: Always